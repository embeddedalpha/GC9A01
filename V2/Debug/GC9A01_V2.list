
GC9A01_V2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000120  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002a8  080002b0  000012b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002a8  080002a8  000012b0  2**0
                  CONTENTS
  4 .ARM          00000000  080002a8  080002a8  000012b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002a8  080002b0  000012b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002a8  080002a8  000012a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002ac  080002ac  000012ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000012b0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000005e5  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000185  00000000  00000000  000018c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00001a50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000046  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000003c9  00000000  00000000  00001b06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c35  00000000  00000000  00001ecf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008d93a  00000000  00000000  00002b04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0009043e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000ac  00000000  00000000  00090484  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000051  00000000  00000000  00090530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000290 	.word	0x08000290

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000290 	.word	0x08000290

080001c8 <main>:

#include <stdint.h>
#include "main.h"

int main(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 80001cc:	bf00      	nop
 80001ce:	e7fd      	b.n	80001cc <main+0x4>

080001d0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001d0:	b480      	push	{r7}
 80001d2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001d4:	4b06      	ldr	r3, [pc, #24]	@ (80001f0 <SystemInit+0x20>)
 80001d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80001da:	4a05      	ldr	r2, [pc, #20]	@ (80001f0 <SystemInit+0x20>)
 80001dc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80001e0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80001e4:	bf00      	nop
 80001e6:	46bd      	mov	sp, r7
 80001e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	e000ed00 	.word	0xe000ed00

080001f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001f4:	480d      	ldr	r0, [pc, #52]	@ (800022c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001f8:	f7ff ffea 	bl	80001d0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001fc:	480c      	ldr	r0, [pc, #48]	@ (8000230 <LoopForever+0x6>)
  ldr r1, =_edata
 80001fe:	490d      	ldr	r1, [pc, #52]	@ (8000234 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000200:	4a0d      	ldr	r2, [pc, #52]	@ (8000238 <LoopForever+0xe>)
  movs r3, #0
 8000202:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000204:	e002      	b.n	800020c <LoopCopyDataInit>

08000206 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000206:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000208:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800020a:	3304      	adds	r3, #4

0800020c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800020c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800020e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000210:	d3f9      	bcc.n	8000206 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000212:	4a0a      	ldr	r2, [pc, #40]	@ (800023c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000214:	4c0a      	ldr	r4, [pc, #40]	@ (8000240 <LoopForever+0x16>)
  movs r3, #0
 8000216:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000218:	e001      	b.n	800021e <LoopFillZerobss>

0800021a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800021a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800021c:	3204      	adds	r2, #4

0800021e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800021e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000220:	d3fb      	bcc.n	800021a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000222:	f000 f811 	bl	8000248 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000226:	f7ff ffcf 	bl	80001c8 <main>

0800022a <LoopForever>:

LoopForever:
  b LoopForever
 800022a:	e7fe      	b.n	800022a <LoopForever>
  ldr   r0, =_estack
 800022c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000230:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000234:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000238:	080002b0 	.word	0x080002b0
  ldr r2, =_sbss
 800023c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000240:	2000001c 	.word	0x2000001c

08000244 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000244:	e7fe      	b.n	8000244 <ADC_IRQHandler>
	...

08000248 <__libc_init_array>:
 8000248:	b570      	push	{r4, r5, r6, lr}
 800024a:	4d0d      	ldr	r5, [pc, #52]	@ (8000280 <__libc_init_array+0x38>)
 800024c:	4c0d      	ldr	r4, [pc, #52]	@ (8000284 <__libc_init_array+0x3c>)
 800024e:	1b64      	subs	r4, r4, r5
 8000250:	10a4      	asrs	r4, r4, #2
 8000252:	2600      	movs	r6, #0
 8000254:	42a6      	cmp	r6, r4
 8000256:	d109      	bne.n	800026c <__libc_init_array+0x24>
 8000258:	4d0b      	ldr	r5, [pc, #44]	@ (8000288 <__libc_init_array+0x40>)
 800025a:	4c0c      	ldr	r4, [pc, #48]	@ (800028c <__libc_init_array+0x44>)
 800025c:	f000 f818 	bl	8000290 <_init>
 8000260:	1b64      	subs	r4, r4, r5
 8000262:	10a4      	asrs	r4, r4, #2
 8000264:	2600      	movs	r6, #0
 8000266:	42a6      	cmp	r6, r4
 8000268:	d105      	bne.n	8000276 <__libc_init_array+0x2e>
 800026a:	bd70      	pop	{r4, r5, r6, pc}
 800026c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000270:	4798      	blx	r3
 8000272:	3601      	adds	r6, #1
 8000274:	e7ee      	b.n	8000254 <__libc_init_array+0xc>
 8000276:	f855 3b04 	ldr.w	r3, [r5], #4
 800027a:	4798      	blx	r3
 800027c:	3601      	adds	r6, #1
 800027e:	e7f2      	b.n	8000266 <__libc_init_array+0x1e>
 8000280:	080002a8 	.word	0x080002a8
 8000284:	080002a8 	.word	0x080002a8
 8000288:	080002a8 	.word	0x080002a8
 800028c:	080002ac 	.word	0x080002ac

08000290 <_init>:
 8000290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000292:	bf00      	nop
 8000294:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000296:	bc08      	pop	{r3}
 8000298:	469e      	mov	lr, r3
 800029a:	4770      	bx	lr

0800029c <_fini>:
 800029c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029e:	bf00      	nop
 80002a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002a2:	bc08      	pop	{r3}
 80002a4:	469e      	mov	lr, r3
 80002a6:	4770      	bx	lr
